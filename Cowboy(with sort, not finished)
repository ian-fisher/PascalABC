Uses GraphABC;

var
  p: boolean;
  n, v: integer;

type
  arr = array[1..100] of integer;

const
  w = 32;

var
  x1: arr;

procedure Swap(var a, b: integer);
var
  t: integer;
begin
  t := a;
  a := b;
  b := t;
end;

procedure Space(vk: integer);
begin
  if vk = vk_space then
    p := false;
end;

procedure Enemy(x, y, md: integer);
var
  k: integer;
begin
  if p = true then
  begin
    Circle(x, 460, 20);
    n := n + 1;
    x1[n] := x;
  end;
  Redraw;
end;

procedure sort(var a: arr);
var
  k, l, number_max: integer;
begin
  for k := n downto 2 do
  begin
    number_max := 1;
    for l := 1 to k do
      if a[number_max] < a[l] then
      begin
        number_max := l;
      end;
    swap(a[number_max], a[k]);
  end;
end;

procedure Fight();
var
  j: integer;
begin
  begin
    for j := 1 to n do
    begin
      if x1[j] > 340 then
        x1[j] := x1[j] - v
      else if x1[j] < 300 then
        x1[j] := x1[j] + v;
    end;
    Redraw;
  end;
end;

var
  i: integer;
  h: arr;

begin
  LockDrawing;
  p := true;
  v := 50;
  SetBrushColor(clYellow);
  Redraw;
  ClearWindow;
  for i := 1 to n do
    h[i] := random(1, 480);
  Circle(320, 460, 20);
  Redraw;
  SetBrushColor(clRed);
  OnMouseDown := Enemy;
  OnKeyDown := Space;
  sort(h);
  Fight;
end.
