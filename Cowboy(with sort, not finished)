Uses GraphABC;

var
  p: boolean;
  n, v: integer;

type
  arr = array[1..100] of integer;

const
  w = 32;

var
  x1, y1, ma, h, g: arr;
  m: integer;

procedure Swap(var a, b: integer);
var
  t: integer;
begin
  t := a;
  a := b;
  b := t;
end;

procedure Fight();
var
  j, i: integer;
begin
  while i = 0 do
  begin
    ClearWindow;
    SetBrushColor(clYellow);
    Circle(320, 240, 20);
    for j := 1 to n do
    begin
      if x1[j] > 320 then
        x1[j] := x1[j] - v
      else if x1[j] < 320 then
        x1[j] := x1[j] + v;
      if y1[j] > 240 then
        y1[j] := y1[j] - v
      else if y1[j] < 240 then
        y1[j] := y1[j] + v;
      if (x1[j] = 320) and (y1[j] = 240) then
        i := 1;
      SetBrushColor(clRed);
      Circle(x1[j], y1[j], 20);
    end;
    m := g[n];
    Line(320, 240, x1[m], y1[m]);
    Redraw;
    Sleep(50);
  end;
end;

procedure sort();
var
  k, l, number_max: integer;
begin
  for k := n downto 2 do
  begin
    number_max := 1;
    for l := 1 to k do
      if h[number_max] < h[l] then
      begin
        number_max := l;
      end;
    swap(g[number_max], g[k]);
    swap(h[number_max], h[k]);
  end;
end;

procedure Space(vk: integer);
var
  i: integer;
begin
  if vk = vk_space then
    p := false;
  for i := 1 to n do
  begin
    h[i] := ma[i];
    g[i] := i;
  end;
  sort;
  Fight;
end;

procedure Enemy(x, y, md: integer);
var
  x2, y2 : integer;
begin
  if p = true then
  begin
    Circle(x, y, 20);
    n := n + 1;
    x1[n] := x;
    y1[n] := y;
    if x > 320 then x2 := x - 320;
    if y > 240 then y2 := y - 240;
    ma[n] := max(x2, y2);
  end;
  Redraw;
end;

var
  i: integer;

begin
  LockDrawing;
  p := true;
  v := 1;
  SetPenColor(clLime);
  SetPenWidth(4);
  SetBrushColor(clYellow);
  Redraw;
  ClearWindow;
  Circle(320, 240, 20);
  Redraw;
  SetBrushColor(clRed);
  OnMouseDown := Enemy;
  OnKeyDown := Space;
end.
